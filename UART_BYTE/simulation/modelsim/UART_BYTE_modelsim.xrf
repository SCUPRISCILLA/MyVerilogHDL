vendor_name = ModelSim
source_file = 1, D:/MyWorkSpace/CodeProject/FPGA/MyVerilogHDL/UART_BYTE/UART_BYTE.v
source_file = 1, D:/MyWorkSpace/CodeProject/FPGA/MyVerilogHDL/UART_BYTE/db/UART_BYTE.cbx.xml
design_name = UART_BYTE
instance = comp, \rs232_tx~output , rs232_tx~output, UART_BYTE, 1
instance = comp, \tx_done~output , tx_done~output, UART_BYTE, 1
instance = comp, \uart_state~output , uart_state~output, UART_BYTE, 1
instance = comp, \clk~input , clk~input, UART_BYTE, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, UART_BYTE, 1
instance = comp, \div_cnt[0]~16 , div_cnt[0]~16, UART_BYTE, 1
instance = comp, \rst_n~input , rst_n~input, UART_BYTE, 1
instance = comp, \rst_n~inputclkctrl , rst_n~inputclkctrl, UART_BYTE, 1
instance = comp, \div_cnt[4]~25 , div_cnt[4]~25, UART_BYTE, 1
instance = comp, \div_cnt[5]~27 , div_cnt[5]~27, UART_BYTE, 1
instance = comp, \div_cnt[5] , div_cnt[5], UART_BYTE, 1
instance = comp, \div_cnt[6]~29 , div_cnt[6]~29, UART_BYTE, 1
instance = comp, \div_cnt[6] , div_cnt[6], UART_BYTE, 1
instance = comp, \div_cnt[7]~31 , div_cnt[7]~31, UART_BYTE, 1
instance = comp, \div_cnt[7] , div_cnt[7], UART_BYTE, 1
instance = comp, \div_cnt[8]~33 , div_cnt[8]~33, UART_BYTE, 1
instance = comp, \div_cnt[8] , div_cnt[8], UART_BYTE, 1
instance = comp, \baud_set[0]~input , baud_set[0]~input, UART_BYTE, 1
instance = comp, \baud_set[2]~input , baud_set[2]~input, UART_BYTE, 1
instance = comp, \baud_set[1]~input , baud_set[1]~input, UART_BYTE, 1
instance = comp, \WideOr2~0 , WideOr2~0, UART_BYTE, 1
instance = comp, \bps_dr[8] , bps_dr[8], UART_BYTE, 1
instance = comp, \Decoder0~1 , Decoder0~1, UART_BYTE, 1
instance = comp, \bps_dr[7] , bps_dr[7], UART_BYTE, 1
instance = comp, \Equal0~4 , Equal0~4, UART_BYTE, 1
instance = comp, \bps_cnt[2]~8 , bps_cnt[2]~8, UART_BYTE, 1
instance = comp, \bps_cnt[3]~10 , bps_cnt[3]~10, UART_BYTE, 1
instance = comp, \bps_cnt[3] , bps_cnt[3], UART_BYTE, 1
instance = comp, \bps_cnt[0]~4 , bps_cnt[0]~4, UART_BYTE, 1
instance = comp, \bps_cnt[0] , bps_cnt[0], UART_BYTE, 1
instance = comp, \Equal2~0 , Equal2~0, UART_BYTE, 1
instance = comp, \tx_done~reg0 , tx_done~reg0, UART_BYTE, 1
instance = comp, \send_en~input , send_en~input, UART_BYTE, 1
instance = comp, \uart_state~0 , uart_state~0, UART_BYTE, 1
instance = comp, \uart_state~reg0 , uart_state~reg0, UART_BYTE, 1
instance = comp, \Decoder0~0 , Decoder0~0, UART_BYTE, 1
instance = comp, \bps_dr[11] , bps_dr[11], UART_BYTE, 1
instance = comp, \div_cnt[9]~35 , div_cnt[9]~35, UART_BYTE, 1
instance = comp, \div_cnt[9] , div_cnt[9], UART_BYTE, 1
instance = comp, \div_cnt[10]~37 , div_cnt[10]~37, UART_BYTE, 1
instance = comp, \div_cnt[10] , div_cnt[10], UART_BYTE, 1
instance = comp, \div_cnt[11]~39 , div_cnt[11]~39, UART_BYTE, 1
instance = comp, \div_cnt[11] , div_cnt[11], UART_BYTE, 1
instance = comp, \WideOr0~0 , WideOr0~0, UART_BYTE, 1
instance = comp, \bps_dr[12]~feeder , bps_dr[12]~feeder, UART_BYTE, 1
instance = comp, \bps_dr[12] , bps_dr[12], UART_BYTE, 1
instance = comp, \div_cnt[12]~41 , div_cnt[12]~41, UART_BYTE, 1
instance = comp, \div_cnt[12] , div_cnt[12], UART_BYTE, 1
instance = comp, \Equal0~6 , Equal0~6, UART_BYTE, 1
instance = comp, \WideOr1~0 , WideOr1~0, UART_BYTE, 1
instance = comp, \bps_dr[10] , bps_dr[10], UART_BYTE, 1
instance = comp, \Decoder1~0 , Decoder1~0, UART_BYTE, 1
instance = comp, \bps_dr[4] , bps_dr[4], UART_BYTE, 1
instance = comp, \Equal0~5 , Equal0~5, UART_BYTE, 1
instance = comp, \Equal0~7 , Equal0~7, UART_BYTE, 1
instance = comp, \div_cnt[13]~43 , div_cnt[13]~43, UART_BYTE, 1
instance = comp, \div_cnt[13] , div_cnt[13], UART_BYTE, 1
instance = comp, \div_cnt[14]~45 , div_cnt[14]~45, UART_BYTE, 1
instance = comp, \div_cnt[14] , div_cnt[14], UART_BYTE, 1
instance = comp, \div_cnt[15]~47 , div_cnt[15]~47, UART_BYTE, 1
instance = comp, \div_cnt[15] , div_cnt[15], UART_BYTE, 1
instance = comp, \Equal1~0 , Equal1~0, UART_BYTE, 1
instance = comp, \Equal0~1 , Equal0~1, UART_BYTE, 1
instance = comp, \WideOr3~0 , WideOr3~0, UART_BYTE, 1
instance = comp, \bps_dr[6] , bps_dr[6], UART_BYTE, 1
instance = comp, \Equal0~2 , Equal0~2, UART_BYTE, 1
instance = comp, \bps_dr~0 , bps_dr~0, UART_BYTE, 1
instance = comp, \bps_dr[1] , bps_dr[1], UART_BYTE, 1
instance = comp, \Equal0~0 , Equal0~0, UART_BYTE, 1
instance = comp, \Equal0~3 , Equal0~3, UART_BYTE, 1
instance = comp, \div_cnt[15]~18 , div_cnt[15]~18, UART_BYTE, 1
instance = comp, \div_cnt[0] , div_cnt[0], UART_BYTE, 1
instance = comp, \div_cnt[1]~19 , div_cnt[1]~19, UART_BYTE, 1
instance = comp, \div_cnt[1] , div_cnt[1], UART_BYTE, 1
instance = comp, \div_cnt[2]~21 , div_cnt[2]~21, UART_BYTE, 1
instance = comp, \div_cnt[2] , div_cnt[2], UART_BYTE, 1
instance = comp, \div_cnt[3]~23 , div_cnt[3]~23, UART_BYTE, 1
instance = comp, \div_cnt[3] , div_cnt[3], UART_BYTE, 1
instance = comp, \div_cnt[4] , div_cnt[4], UART_BYTE, 1
instance = comp, \Equal1~1 , Equal1~1, UART_BYTE, 1
instance = comp, \Equal1~3 , Equal1~3, UART_BYTE, 1
instance = comp, \Equal1~2 , Equal1~2, UART_BYTE, 1
instance = comp, \Equal1~4 , Equal1~4, UART_BYTE, 1
instance = comp, \bps_cnt[1]~6 , bps_cnt[1]~6, UART_BYTE, 1
instance = comp, \bps_cnt[1] , bps_cnt[1], UART_BYTE, 1
instance = comp, \bps_cnt[2] , bps_cnt[2], UART_BYTE, 1
instance = comp, \data_byte[6]~input , data_byte[6]~input, UART_BYTE, 1
instance = comp, \r_data_byte[6] , r_data_byte[6], UART_BYTE, 1
instance = comp, \data_byte[1]~input , data_byte[1]~input, UART_BYTE, 1
instance = comp, \r_data_byte[1]~feeder , r_data_byte[1]~feeder, UART_BYTE, 1
instance = comp, \r_data_byte[1] , r_data_byte[1], UART_BYTE, 1
instance = comp, \Mux0~0 , Mux0~0, UART_BYTE, 1
instance = comp, \data_byte[7]~input , data_byte[7]~input, UART_BYTE, 1
instance = comp, \r_data_byte[7] , r_data_byte[7], UART_BYTE, 1
instance = comp, \data_byte[0]~input , data_byte[0]~input, UART_BYTE, 1
instance = comp, \r_data_byte[0]~feeder , r_data_byte[0]~feeder, UART_BYTE, 1
instance = comp, \r_data_byte[0] , r_data_byte[0], UART_BYTE, 1
instance = comp, \Mux0~1 , Mux0~1, UART_BYTE, 1
instance = comp, \Mux0~2 , Mux0~2, UART_BYTE, 1
instance = comp, \data_byte[4]~input , data_byte[4]~input, UART_BYTE, 1
instance = comp, \r_data_byte[4]~feeder , r_data_byte[4]~feeder, UART_BYTE, 1
instance = comp, \r_data_byte[4] , r_data_byte[4], UART_BYTE, 1
instance = comp, \data_byte[5]~input , data_byte[5]~input, UART_BYTE, 1
instance = comp, \r_data_byte[5] , r_data_byte[5], UART_BYTE, 1
instance = comp, \data_byte[3]~input , data_byte[3]~input, UART_BYTE, 1
instance = comp, \r_data_byte[3]~feeder , r_data_byte[3]~feeder, UART_BYTE, 1
instance = comp, \r_data_byte[3] , r_data_byte[3], UART_BYTE, 1
instance = comp, \data_byte[2]~input , data_byte[2]~input, UART_BYTE, 1
instance = comp, \r_data_byte[2] , r_data_byte[2], UART_BYTE, 1
instance = comp, \Mux0~3 , Mux0~3, UART_BYTE, 1
instance = comp, \Mux0~4 , Mux0~4, UART_BYTE, 1
instance = comp, \Mux0~5 , Mux0~5, UART_BYTE, 1
instance = comp, \Mux0~6 , Mux0~6, UART_BYTE, 1
instance = comp, \rs232_tx~reg0 , rs232_tx~reg0, UART_BYTE, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
